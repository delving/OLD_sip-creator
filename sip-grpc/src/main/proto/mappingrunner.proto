// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "eu.delving.sipgrpc";
option java_outer_classname = "MappingRunnerProto";
option objc_class_prefix = "MR";

package sipgrpc;

service Runner {

    // run single mapping
    rpc runMapping (Request) returns (Result) {}

    rpc streamMapping (stream Request) returns (stream Result) {}
}

message Request {
    string orgID = 1;
    string datasetID = 2;
    string localID = 3;
    FileVersion mapping = 4;
    FileVersion recordDefinition = 5;
    string record = 6;
}

message FileVersion {
    string path = 1;
    // commit sha
    string version = 2;
}

message Error {
    string line = 1;
    string level = 2;
    string msg = 3;
}

message Result {
    string record = 1;
    repeated Error errors = 2;
}

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  // Sends another greeting
  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
