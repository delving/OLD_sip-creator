<rec-mapping prefix="edm" schemaVersion="5.2.6" locked="true">
  <facts>
    <entry>
      <string>country</string>
      <string>netherlands</string>
    </entry>
    <entry>
      <string>schemaVersions</string>
      <string>edm_5.2.6</string>
    </entry>
    <entry>
      <string>baseUrl</string>
      <string>http://data.collectienederland.nl</string>
    </entry>
    <entry>
      <string>provider</string>
      <string>Rijksdienst voor het Cultureel Erfgoed</string>
    </entry>
    <entry>
      <string>dataProviderUri</string>
      <string>http://id.musip.nl/crm_e39/4717</string>
    </entry>
    <entry>
      <string>rights</string>
      <string>http://creativecommons.org/publicdomain/zero/1.0/</string>
    </entry>
    <entry>
      <string>name</string>
      <string>Rijksmuseum</string>
    </entry>
    <entry>
      <string>language</string>
      <string>nl</string>
    </entry>
    <entry>
      <string>dataProvider</string>
      <string>Rijksmuseum Amsterdam</string>
    </entry>
    <entry>
      <string>type</string>
      <string>IMAGE</string>
    </entry>
    <entry>
      <string>spec</string>
      <string>rijksmuseum</string>
    </entry>
    <entry>
      <string>orgId</string>
      <string>dcn</string>
    </entry>
  </facts>
  <functions/>
  <dyn-opts>
    <dyn-opt path="/edm:RDF/edm:ProvidedCHO/dc:creator" value="literal"/>
    <dyn-opt path="/edm:RDF/edm:Agent" value="Creator"/>
    <dyn-opt path="/edm:RDF/skos:Concept" value="Medium"/>
    <dyn-opt path="/edm:RDF/skos:Concept" value="Type"/>
    <dyn-opt path="/edm:RDF/nave:DcnResource/nave:technique" value="resource"/>
  </dyn-opts>
  <node-mappings>
    <node-mapping inputPath="/input" outputPath="/edm:RDF"/>
    <node-mapping inputPath="/input" outputPath="/edm:RDF/ore:Aggregation/@rdf:about">
      <groovy-code>
        <string>
                            &quot;${baseUrl}/resource/aggregation/${spec}/${_uniqueIdentifier.sanitizeURI()}&quot;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input" outputPath="/edm:RDF/ore:Aggregation/edm:aggregatedCHO/@rdf:resource">
      <groovy-code>
        <string>
                                &quot;${baseUrl}/resource/document/${spec}/${_uniqueIdentifier.sanitizeURI()}&quot;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/facts/dataProvider" outputPath="/edm:RDF/ore:Aggregation/edm:dataProvider"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/edm:isShownAt" outputPath="/edm:RDF/ore:Aggregation/edm:isShownAt"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/edm:isShownAt/@rdf:resource" outputPath="/edm:RDF/ore:Aggregation/edm:isShownAt/@rdf:resource"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/edm:isShownBy" outputPath="/edm:RDF/ore:Aggregation/edm:isShownBy"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/edm:isShownBy/@rdf:resource" outputPath="/edm:RDF/ore:Aggregation/edm:isShownBy/@rdf:resource"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/edm:object" outputPath="/edm:RDF/ore:Aggregation/edm:object"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/edm:object/@rdf:resource" outputPath="/edm:RDF/ore:Aggregation/edm:object/@rdf:resource"/>
    <node-mapping inputPath="/facts/provider" outputPath="/edm:RDF/ore:Aggregation/edm:provider"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/edm:rights/@rdf:resource" outputPath="/edm:RDF/ore:Aggregation/edm:rights/@rdf:resource"/>
    <node-mapping inputPath="/input" outputPath="/edm:RDF/edm:ProvidedCHO/@rdf:about">
      <groovy-code>
        <string>
                            &quot;${baseUrl}/resource/document/${spec}/${_uniqueIdentifier.sanitizeURI()}&quot;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:contributor" outputPath="/edm:RDF/edm:ProvidedCHO/dc:contributor"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:contributor/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:contributor/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:coverage" outputPath="/edm:RDF/edm:ProvidedCHO/dc:coverage"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:coverage/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:coverage/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/@rdf:about" outputPath="/edm:RDF/edm:ProvidedCHO/dc:creator/@rdf:resource"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:creator" outputPath="/edm:RDF/edm:ProvidedCHO/dc:creator[literal]">
      <groovy-code>
        <string>if (_dccreator != &quot;&quot;) {</string>
        <string>&quot;${_dccreator}&quot;</string>
        <string>}</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:creator/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:creator[literal]/@xml:lang">
      <groovy-code>
        <string>_dccreator[&apos;@xml:lang&apos;] * { _xmllang -&gt;</string>
        <string>if (_dccreator != &quot;&quot;) {</string>
        <string>&quot;${_xmllang}&quot;</string>
        <string>}</string>
        <string>}</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:description" outputPath="/edm:RDF/edm:ProvidedCHO/dc:description"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:description/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:description/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:identifier" outputPath="/edm:RDF/edm:ProvidedCHO/dc:identifier"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:publisher" outputPath="/edm:RDF/edm:ProvidedCHO/dc:publisher"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/dc:rights" outputPath="/edm:RDF/edm:ProvidedCHO/dc:rights"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/ore:Aggregation/dc:rights/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:rights/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:subject" outputPath="/edm:RDF/edm:ProvidedCHO/dc:subject"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:subject/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:subject/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:title" outputPath="/edm:RDF/edm:ProvidedCHO/dc:title" operator="FIRST"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:title/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:title/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:type" outputPath="/edm:RDF/edm:ProvidedCHO/dc:type"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:type/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dc:type/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:created" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:created"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:created/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:created/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:extent" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:extent"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:extent/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:extent/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:hasPart" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:hasPart"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:isPartOf" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:isPartOf"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:isPartOf/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:isPartOf/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:isReferencedBy" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:isReferencedBy"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:format" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:medium"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:format/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:medium/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:provenance" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:provenance"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:provenance/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:provenance/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:spatial" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:spatial"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:spatial/@xml:lang" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:spatial/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/edm:type" outputPath="/edm:RDF/edm:ProvidedCHO/edm:type"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:WebResource" outputPath="/edm:RDF/edm:WebResource"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:WebResource/@rdf:about" outputPath="/edm:RDF/edm:WebResource/@rdf:about"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent" outputPath="/edm:RDF/edm:Agent[Creator]"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/@rdf:about" outputPath="/edm:RDF/edm:Agent[Creator]/@rdf:about"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/skos:prefLabel" outputPath="/edm:RDF/edm:Agent[Creator]/skos:prefLabel"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/skos:prefLabel/@xml:lang" outputPath="/edm:RDF/edm:Agent[Creator]/skos:prefLabel/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/edm:begin" outputPath="/edm:RDF/edm:Agent[Creator]/edm:begin"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/edm:end" outputPath="/edm:RDF/edm:Agent[Creator]/edm:end"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/rdaGr2:gender" outputPath="/edm:RDF/edm:Agent[Creator]/rdaGr2:gender"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/rdaGr2:placeOfBirth" outputPath="/edm:RDF/edm:Agent[Creator]/rdaGr2:placeOfBirth"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/rdaGr2:placeOfDeath" outputPath="/edm:RDF/edm:Agent[Creator]/rdaGr2:placeOfDeath"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/rdaGr2:professionOrOccupation" outputPath="/edm:RDF/edm:Agent[Creator]/rdaGr2:professionOrOccupation"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Agent/rdaGr2:professionOrOccupation/@xml:lang" outputPath="/edm:RDF/edm:Agent[Creator]/rdaGr2:professionOrOccupation/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Place" outputPath="/edm:RDF/edm:Place"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Place/@rdf:about" outputPath="/edm:RDF/edm:Place/@rdf:about"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Place/wgs84_pos:lat" outputPath="/edm:RDF/edm:Place/wgs84_pos:lat"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Place/wgs84_pos:long" outputPath="/edm:RDF/edm:Place/wgs84_pos:long"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Place/skos:prefLabel" outputPath="/edm:RDF/edm:Place/skos:prefLabel"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:Place/skos:prefLabel/@xml:lang" outputPath="/edm:RDF/edm:Place/skos:prefLabel/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:TimeSpan" outputPath="/edm:RDF/edm:TimeSpan"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:TimeSpan/@rdf:about" outputPath="/edm:RDF/edm:TimeSpan/@rdf:about"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:TimeSpan/skos:prefLabel" outputPath="/edm:RDF/edm:TimeSpan/skos:prefLabel"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:TimeSpan/skos:prefLabel/@xml:lang" outputPath="/edm:RDF/edm:TimeSpan/skos:prefLabel/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:format" outputPath="/edm:RDF/skos:Concept[Medium]"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:format/@rdf:resource" outputPath="/edm:RDF/skos:Concept[Medium]/@rdf:about"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:format" outputPath="/edm:RDF/skos:Concept[Medium]/skos:prefLabel"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:format/@xml:lang" outputPath="/edm:RDF/skos:Concept[Medium]/skos:prefLabel/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:type" outputPath="/edm:RDF/skos:Concept[Type]"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:type/@rdf:resource" outputPath="/edm:RDF/skos:Concept[Type]/@rdf:about"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:type" outputPath="/edm:RDF/skos:Concept[Type]/skos:prefLabel"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dc:type/@xml:lang" outputPath="/edm:RDF/skos:Concept[Type]/skos:prefLabel/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/edmfp:technique" outputPath="/edm:RDF/nave:DcnResource/nave:technique"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/edmfp:technique/@xml:lang" outputPath="/edm:RDF/nave:DcnResource/nave:technique/@xml:lang"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/edmfp:technique/@rdf:resource" outputPath="/edm:RDF/nave:DcnResource/nave:technique[resource]/@rdf:resource"/>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DcnResource/nave:province">
      <groovy-code>
        <string>&apos;Noord-Holland&apos;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:isPartOf" outputPath="/edm:RDF/nave:DcnResource/nave:collectionPart"/>
    <node-mapping inputPath="/input/record/oai:metadata/rdf:RDF/edm:ProvidedCHO/dcterms:isPartOf/@xml:lang" outputPath="/edm:RDF/nave:DcnResource/nave:collectionPart/@xml:lang"/>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:RijksCollection/nave:rijksCollection">
      <groovy-code>
        <string>&apos;true&apos;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:featured">
      <groovy-code>
        <string>&apos;false&apos;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:allowDeepZoom">
      <groovy-code>
        <string>&apos;true&apos;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:allowLinkedOpenData">
      <groovy-code>
        <string>&apos;true&apos;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:allowSourceDownload">
      <groovy-code>
        <string>&apos;false&apos;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:public">
      <groovy-code>
        <string>&apos;true&apos;</string>
      </groovy-code>
    </node-mapping>
  </node-mappings>
</rec-mapping>