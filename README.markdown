# Delving SIP-Creator

The Delving Platform centers around the CultureHub online server, which gives people the ability to search and navigate large datasets of cultural heritage metadata.  The SIP-Creator is the standalone tool that is used to prepare and manage these large datasets, and then to upload them to the CultureHub.  SIP stands for "Submission Information Package", a term from OAIS which refers to the packages as they initially arrive online.

## Groovy

The core technology of the SIP-Creator is built around on the Groovy programming language, since it is "builder" code in Groovy which actually does the mapping work.  Most of the Groovy code responsible for the mapping, at least its global structure, is generated automatically.

The SIP-Creator user only has only to work on tiny snippets of code at any given time, and the charm of the user interface is that the code that is adjusted by the user is automatically compiled and executed on-the-fly.  This way it is possible for mappers to see the results of their work immediately, and the process of mapping becomes a lot more effective and satisfying.

The key advantage of having a full-fledged dynamic programming language at the mapper's disposal becomes very clear as the trickiness of the corner cases of real-world mapping challenges present themselves.

## Almost Anything Goes

Datasets come from many different places, and from a number of different storage systems, so in order to be able to consume all this variety and make good use of it in the CultureHub, the SIP-Creator is responsible for massaging this data until it is in a normalized standard format that is useful for the online server, and then handling the efficient upload of the data in compressed form.

The only real requirement for what is taken as input to the SIP-Creator is that it be XML encoded with UTF-8.  The structure of that XML will naturally determine how easy or difficult the mapping process is, but generally any form of XML can be consumed.

The source XML can either be imported from an accessible drive/volume on the mapper's own computer or local network, or it can be harvested using the OAI-PMH protocol if there is a server available.

## Step by Step

The basic work-flow of ingesting metadata into the CultureHub using the SIP-Creator is as follows:

* Create an empty dataset on the CultureHub

* Download the empty dataset to the SIP-Creator's local workspace (contains target record definitions)

* Import metadata into the SIP-Creator either by reading XML locally or fetching it via OAI-PMH

* Have the SIP-Creator analyze the input dataset and show statistics

* Choose the record root and the unique element in the source XML structure

* Convert the metadata to normalized Delving source format

* Have the SIP-Creator analyze the records in source format

* Make mappings from source structure to target record structure by selecting and clicking

* Refine mappings where necessary to do manipulations using Groovy

* Validate the output of the mapping against the target record structure, to ensure that the dataset is ready for using on the CultureHub

* After validation, the dataset can be uploaded to the CultureHub

* Indexing of the dataset for search and navigation is done via the web interface of the CultureHub


## Project Structure

This project consists of two modules, because the part of the code responsible for executing the mapping transformation does its work both on the client (for validation) and on the server (for indexing and rendering).  The remainder of the code is dedicated to presenting a very interactive user interface in which mappers can specify

* __sip-core__
    * code that exists both within the CultureHub and the SIP-Creator
    * responsible for actually executing the mapping transformation
    * on the client: only for validation
    * on the server: for indexing and rendering

* __sip-creator__ -
    * the interactive user interface
    * *live coding*, auto-compilation-execution of Groovy snippets
    * download, import, analysis, mapping, refinement, validation, upload
    * caches data in `~/SIPCreatorWorkspace` directory

## Deployment

The SIP-Creator is deployed to users with Java Web Start technology, which in this case involves placing the JAR files associated with the SIP-Creator in a public directory along with an icon and a dynamically-generated "launch file" __sip-creator.jnlp__, which us used by the Web Start.

In the root of the culture-hub project there is an __ant__ `build.xml` which will prepare for this deployment.  The command `ant downloadSipCreator` will install the jars in `/public/sip-creator` of the CultureHub project.

When the user clicks on the CultureHub link to the SIP-Creator __sip-creator.jnlp__ file, it is automatically generated by a scala class there called `SipCreator`, which can only be accessed by a logged-in user and puts that user's username into the launch file, thereby personalizing it.

## Contact

If you want to know more about the SIP-Creator, contact us at __`<sip-creator@delving.eu>`__

- - -